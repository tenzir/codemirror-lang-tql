@top Pipeline {
  SourceOperator (TransformationOperator | Head | Where)* SinkOperator
}

Export {
  "export"
}

From {
  "from" Any+
}

Load {
 "load" Any+
}

Read {
 "read" Any+
}

Shell {
 "shell" Any+
}

Version {
 "version" | "version --dev"
}

SourceOperator {
  Export | From | Load | Read | Shell | Version
}

Head {
 "|" "head" UnsignedInteger?
}

Tail {
 "|" "tail" UnsignedInteger?
}

Pass {
 "|" "pass"
}

Repeat {
 "|" "repeat" UnsignedInteger?
}



Where {
"|" "where" Expression
}

Expression { Conjunction ( "||" Conjunction )* }

Conjunction { Negation ( "&&" Negation )* }

Negation { "!"? Predicate }

Predicate { Field Comparision Value }

Comparision { "==" | "!=" | "<" | "<=" | ">" | ">=" | "in" | "not in" }

fieldList { Field ("," Field)* }

Value { Bool | None | Double | Ip | Time }

TransformationOperator {
  "|" ("drop"|"enumerate"|"extend"|"hash"|"measure"|"parse"|"pass"|
  "print"|"pseudonymize"|"put"|"rare"|"rename"|"repeat"|"replace"|
  "select"|"shell"|"sigma"|"sort"|"summarize"|"tail"|"taste"|"top"|"unique") Arguments* Flags*
}


To {
   "|" "to" Filename
}


SinkOperator {
  ("|" ("import"|"save"|"serve"|"write") Arguments* Flags*) | To
}

@tokens {
  Arguments { @asciiLetter+ }
  UnsignedInteger { @digit+ }
  string { @asciiLetter+ }
  space { @whitespace }
  Any { (@asciiLetter | @digit | $[.,])+ }
  Filename {  (@asciiLetter | @digit | $[.,/])+  }




  Bool { "true" | "false" }
  None { "null" }

  Double { "-"? @digit+ "." @digit+ }
  Ip { @digit+ "." @digit+ "." @digit+ "." @digit+ }
  @precedence { Ip, Double }

  Time {"now" | @digit+ @whitespace ("hour" | "day" | "week" | "month" | "year") @whitespace ("ago")? }

  List { "[" (Value ("," Value)*)? "]" }
  Field { (@asciiLetter | $[._-])+ }
}

// should match all of now, 1h ago, 2020-01-01+10:42:00


Flags {
  "--"string
}


@skip { space }
